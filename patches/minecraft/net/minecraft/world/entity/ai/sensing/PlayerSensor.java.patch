--- a/net/minecraft/world/entity/ai/sensing/PlayerSensor.java
+++ b/net/minecraft/world/entity/ai/sensing/PlayerSensor.java
@@ -6,6 +_,8 @@
 import java.util.Optional;
 import java.util.Set;
 import java.util.stream.Collectors;
+
+import me.earthme.millacat.utils.EntityPositionCache;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.LivingEntity;
@@ -19,14 +_,12 @@
    }
 
    protected void m_5578_(ServerLevel p_26740_, LivingEntity p_26741_) {
-      List<Player> list = p_26740_.m_6907_().stream().filter(EntitySelector.f_20408_).filter((p_26744_) -> {
-         return p_26741_.m_19950_(p_26744_, 16.0D);
-      }).sorted(Comparator.comparingDouble(p_26741_::m_20280_)).collect(Collectors.toList());
+      List<EntityPositionCache> list = p_26740_.m_6907_().stream().filter(EntitySelector.f_20408_).filter((p_26744_) -> p_26741_.m_19950_(p_26744_, 16.0D)).map(EntityPositionCache::new).sorted(Comparator.comparingDouble(p_26741_::distanceToSqr)).collect(Collectors.toList());
       Brain<?> brain = p_26741_.m_6274_();
-      brain.m_21879_(MemoryModuleType.f_26367_, list);
+      brain.m_21879_(MemoryModuleType.f_26367_, list.stream().map(a -> (Player)a.getCurrentEntity()).toList());
       List<Player> list1 = list.stream().filter((p_26747_) -> {
-         return m_26803_(p_26741_, p_26747_);
-      }).collect(Collectors.toList());
+         return m_26803_(p_26741_, ((LivingEntity) p_26747_.getCurrentEntity()));
+      }).map(a -> ((Player)a.getCurrentEntity())).collect(Collectors.toList());
       brain.m_21879_(MemoryModuleType.f_26368_, list1.isEmpty() ? null : list1.get(0));
       Optional<Player> optional = list1.stream().filter((p_148304_) -> {
          return m_148312_(p_26741_, p_148304_);
