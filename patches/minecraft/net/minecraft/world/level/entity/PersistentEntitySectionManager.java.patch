--- a/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
+++ b/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
@@ -4,11 +_,7 @@
 import com.google.common.collect.Queues;
 import com.google.common.collect.Sets;
 import com.mojang.logging.LogUtils;
-import it.unimi.dsi.fastutil.longs.Long2ObjectMap;
-import it.unimi.dsi.fastutil.longs.Long2ObjectMaps;
-import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
-import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
-import it.unimi.dsi.fastutil.longs.LongSet;
+import it.unimi.dsi.fastutil.longs.*;
 import it.unimi.dsi.fastutil.longs.Long2ObjectMap.Entry;
 import java.io.IOException;
 import java.io.UncheckedIOException;
@@ -17,6 +_,9 @@
 import java.util.Queue;
 import java.util.Set;
 import java.util.UUID;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.concurrent.locks.ReadWriteLock;
+import java.util.concurrent.locks.ReentrantReadWriteLock;
 import java.util.function.Consumer;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
@@ -27,20 +_,23 @@
 import net.minecraft.util.VisibleForDebug;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.chunk.storage.EntityStorage;
+import org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory;
 import org.slf4j.Logger;
 
 public class PersistentEntitySectionManager<T extends EntityAccess> implements AutoCloseable {
    static final Logger f_157490_ = LogUtils.getLogger();
-   final Set<UUID> f_157491_ = Sets.newHashSet();
+   final Set<UUID> f_157491_ = Sets.newConcurrentHashSet();
    final LevelCallback<T> f_157492_;
-   private final EntityPersistentStorage<T> f_157493_;
+   public final EntityPersistentStorage<T> f_157493_;
    private final EntityLookup<T> f_157494_;
    final EntitySectionStorage<T> f_157495_;
    private final LevelEntityGetter<T> f_157496_;
    private final Long2ObjectMap<Visibility> f_157497_ = new Long2ObjectOpenHashMap<>();
-   private final Long2ObjectMap<PersistentEntitySectionManager.ChunkLoadStatus> f_157498_ = new Long2ObjectOpenHashMap<>();
+   private final Long2ObjectMap<PersistentEntitySectionManager.ChunkLoadStatus> f_157498_ = Long2ObjectMaps.synchronize(new Long2ObjectOpenHashMap<>());
    private final LongSet f_157499_ = new LongOpenHashSet();
    private final Queue<ChunkEntities<T>> f_157500_ = Queues.newConcurrentLinkedQueue();
+   private final ReadWriteLock accessLock = new ReentrantReadWriteLock();
 
    public PersistentEntitySectionManager(Class<T> p_157503_, LevelCallback<T> p_157504_, EntityPersistentStorage<T> p_157505_) {
       this.f_157494_ = new EntityLookup<>();
@@ -52,16 +_,25 @@
       this.f_157496_ = new LevelEntityGetterAdapter<>(this.f_157494_, this.f_157495_);
    }
 
+   // CraftBukkit start - add method to get all entities in chunk
+   public List<Entity> getEntities(ChunkPos chunkCoordIntPair) {
+      return f_157495_.m_156888_(chunkCoordIntPair.m_45588_()).flatMap(EntitySection::m_156845_).map(entity -> (Entity) entity).collect(Collectors.toList());
+   }
+
+   public boolean isPending(long pair) {
+      return f_157498_.get(pair) == ChunkLoadStatus.PENDING;
+   }
+   // CraftBukkit end
+
    void m_157509_(long p_157510_, EntitySection<T> p_157511_) {
       if (p_157511_.m_156833_()) {
          this.f_157495_.m_156897_(p_157510_);
       }
-
    }
 
    private boolean m_157557_(T p_157558_) {
       if (!this.f_157491_.add(p_157558_.m_142081_())) {
-         f_157490_.warn("UUID of added entity already exists: {}", (Object)p_157558_);
+         f_157490_.debug("UUID of added entity already exists: {}", (Object)p_157558_); // CatServer - warn -> debug
          return false;
       } else {
          return true;
@@ -72,10 +_,17 @@
       return this.m_157538_(p_157534_, false);
    }
 
+   public boolean addNewEntityWithoutEvent(T entity) {
+      return this.addEntityWithoutEvent(entity, false);
+   }
+
    private boolean m_157538_(T p_157539_, boolean p_157540_) {
-      if (!this.m_157557_(p_157539_)) {
-         return false;
-      } else {
+      if (p_157539_ instanceof Entity entity && net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(entity, entity.f_19853_, p_157540_))) return false;
+      return addEntityWithoutEvent(p_157539_, p_157540_);
+   }
+
+   private boolean addEntityWithoutEvent(T p_157539_, boolean p_157540_) {
+      if (this.m_157557_(p_157539_)) {
          long i = SectionPos.m_175568_(p_157539_.m_142538_());
          EntitySection<T> entitysection = this.f_157495_.m_156893_(i);
          entitysection.m_188346_(p_157539_);
@@ -95,6 +_,7 @@
 
          return true;
       }
+      return false;
    }
 
    static <T extends EntityAccess> Visibility m_157535_(T p_157536_, Visibility p_157537_) {
@@ -104,12 +_,14 @@
    public void m_157552_(Stream<T> p_157553_) {
       p_157553_.forEach((p_157607_) -> {
          this.m_157538_(p_157607_, true);
+         if (p_157607_ instanceof Entity entity) entity.onAddedToWorld();
       });
    }
 
    public void m_157559_(Stream<T> p_157560_) {
       p_157560_.forEach((p_157605_) -> {
          this.m_157538_(p_157605_, false);
+         if (p_157605_ instanceof Entity entity) entity.onAddedToWorld();
       });
    }
 
@@ -138,13 +_,19 @@
 
    public void m_157527_(ChunkPos p_157528_, Visibility p_157529_) {
       long i = p_157528_.m_45588_();
-      if (p_157529_ == Visibility.HIDDEN) {
-         this.f_157497_.remove(i);
-         this.f_157499_.add(i);
-      } else {
-         this.f_157497_.put(i, p_157529_);
-         this.f_157499_.remove(i);
-         this.m_157555_(i);
+
+      this.accessLock.writeLock().lock();
+      try {
+         if (p_157529_ == Visibility.HIDDEN) {
+            this.f_157497_.remove(i);
+            this.f_157499_.add(i);
+         } else {
+            this.f_157497_.put(i, p_157529_);
+            this.f_157499_.remove(i);
+            this.m_157555_(i);
+         }
+      }finally {
+         this.accessLock.writeLock().unlock();
       }
 
       this.f_157495_.m_156888_(i).forEach((p_157545_) -> {
@@ -154,48 +_,46 @@
          boolean flag2 = visibility.m_157691_();
          boolean flag3 = p_157529_.m_157691_();
          if (flag2 && !flag3) {
-            p_157545_.m_156845_().filter((p_157603_) -> {
-               return !p_157603_.m_142389_();
-            }).forEach(this::m_157570_);
+            p_157545_.m_156845_().filter((p_157603_) -> !p_157603_.m_142389_()).forEach(this::m_157570_);
          }
 
          if (flag && !flag1) {
-            p_157545_.m_156845_().filter((p_157601_) -> {
-               return !p_157601_.m_142389_();
-            }).forEach(this::m_157580_);
+            p_157545_.m_156845_().filter((p_157601_) -> !p_157601_.m_142389_()).forEach(this::m_157580_);
          } else if (!flag && flag1) {
-            p_157545_.m_156845_().filter((p_157599_) -> {
-               return !p_157599_.m_142389_();
-            }).forEach(this::m_157575_);
+            p_157545_.m_156845_().filter((p_157599_) -> !p_157599_.m_142389_()).forEach(this::m_157575_);
          }
 
          if (!flag2 && flag3) {
-            p_157545_.m_156845_().filter((p_157597_) -> {
-               return !p_157597_.m_142389_();
-            }).forEach(this::m_157564_);
+            p_157545_.m_156845_().filter((p_157597_) -> !p_157597_.m_142389_()).forEach(this::m_157564_);
          }
 
       });
    }
 
-   private void m_157555_(long p_157556_) {
+   public void m_157555_(long p_157556_) {
       PersistentEntitySectionManager.ChunkLoadStatus persistententitysectionmanager$chunkloadstatus = this.f_157498_.get(p_157556_);
       if (persistententitysectionmanager$chunkloadstatus == PersistentEntitySectionManager.ChunkLoadStatus.FRESH) {
          this.m_157562_(p_157556_);
       }
+   }
 
+   // CatServer start
+   private AtomicBoolean catserver$isCallEvent = new AtomicBoolean(false);
+   private boolean storeChunkSections(long p_157513_, Consumer<T> p_157514_, boolean callEvent) {
+      this.catserver$isCallEvent.set(callEvent);
+      return this.m_157512_(p_157513_, p_157514_);
    }
 
    private boolean m_157512_(long p_157513_, Consumer<T> p_157514_) {
+      var callEvent = this.catserver$isCallEvent.getAndSet(false);
       PersistentEntitySectionManager.ChunkLoadStatus persistententitysectionmanager$chunkloadstatus = this.f_157498_.get(p_157513_);
       if (persistententitysectionmanager$chunkloadstatus == PersistentEntitySectionManager.ChunkLoadStatus.PENDING) {
          return false;
       } else {
-         List<T> list = this.f_157495_.m_156888_(p_157513_).flatMap((p_157542_) -> {
-            return p_157542_.m_156845_().filter(EntityAccess::m_142391_);
-         }).collect(Collectors.toList());
+         List<T> list = this.f_157495_.m_156888_(p_157513_).flatMap((p_157542_) -> p_157542_.m_156845_().filter(EntityAccess::m_142391_)).collect(Collectors.toList());
          if (list.isEmpty()) {
             if (persistententitysectionmanager$chunkloadstatus == PersistentEntitySectionManager.ChunkLoadStatus.LOADED) {
+               if (callEvent) CraftEventFactory.callEntitiesUnloadEvent(((EntityStorage) f_157493_).f_156538_, new ChunkPos(p_157513_), ImmutableList.of()); // CraftBukkit
                this.f_157493_.m_141971_(new ChunkEntities<>(new ChunkPos(p_157513_), ImmutableList.of()));
             }
 
@@ -204,12 +_,14 @@
             this.m_157562_(p_157513_);
             return false;
          } else {
+            if (callEvent) CraftEventFactory.callEntitiesUnloadEvent(((EntityStorage) f_157493_).f_156538_, new ChunkPos(p_157513_), list.stream().map(entity -> (Entity) entity).collect(Collectors.toList())); // CraftBukkit
             this.f_157493_.m_141971_(new ChunkEntities<>(new ChunkPos(p_157513_), list));
             list.forEach(p_157514_);
             return true;
          }
       }
    }
+   // CatServer end
 
    private void m_157562_(long p_157563_) {
       this.f_157498_.put(p_157563_, PersistentEntitySectionManager.ChunkLoadStatus.PENDING);
@@ -221,9 +_,9 @@
    }
 
    private boolean m_157568_(long p_157569_) {
-      boolean flag = this.m_157512_(p_157569_, (p_157595_) -> {
+      boolean flag = this.storeChunkSections(p_157569_, (p_157595_) -> {
          p_157595_.m_142429_().forEach(this::m_157585_);
-      });
+      }, true); // CraftBukkit - add boolean for event call
       if (!flag) {
          return false;
       } else {
@@ -238,9 +_,12 @@
    }
 
    private void m_157577_() {
-      this.f_157499_.removeIf((long p_157584_) -> {
-         return this.f_157497_.get(p_157584_) != Visibility.HIDDEN ? true : this.m_157568_(p_157584_);
-      });
+      this.accessLock.writeLock().lock();
+      try {
+         this.f_157499_.removeIf((long p_157584_) -> this.f_157497_.get(p_157584_) != Visibility.HIDDEN || this.m_157568_(p_157584_));
+      }finally {
+         this.accessLock.writeLock().unlock();
+      }
    }
 
    private void m_157582_() {
@@ -248,8 +_,13 @@
       while((chunkentities = this.f_157500_.poll()) != null) {
          chunkentities.m_156792_().forEach((p_157593_) -> {
             this.m_157538_(p_157593_, true);
+            if (p_157593_ instanceof Entity entity) entity.onAddedToWorld();
          });
          this.f_157498_.put(chunkentities.m_156791_().m_45588_(), PersistentEntitySectionManager.ChunkLoadStatus.LOADED);
+         // CraftBukkit start - call entity load event
+         List<Entity> entities = getEntities(chunkentities.m_156791_());
+         CraftEventFactory.callEntitiesLoadEvent(((EntityStorage) f_157493_).f_156538_, chunkentities.m_156791_(), entities);
+         // CraftBukkit end
       }
 
    }
@@ -273,14 +_,21 @@
 
    public void m_157554_() {
       this.m_157587_().forEach((long p_157579_) -> {
-         boolean flag = this.f_157497_.get(p_157579_) == Visibility.HIDDEN;
+         boolean flag;
+
+         this.accessLock.readLock().lock();
+         try {
+            flag = this.f_157497_.get(p_157579_) == Visibility.HIDDEN;
+         }finally {
+            this.accessLock.readLock().unlock();
+         }
+
          if (flag) {
             this.m_157568_(p_157579_);
          } else {
             this.m_157512_(p_157579_, (p_157591_) -> {
             });
          }
-
       });
    }
 
@@ -300,13 +_,28 @@
       this.f_157493_.m_182219_(true);
    }
 
+   // CatServer start
+   private AtomicBoolean catserver$isSave = new AtomicBoolean(true);
+   public void close(boolean isSave) throws IOException {
+      this.catserver$isSave.set(isSave);
+      this.close();
+   }
+
    public void close() throws IOException {
-      this.m_157561_();
+      var isSave = this.catserver$isSave.getAndSet(true);
+      if (isSave) {
+         this.m_157561_();
+      }
       this.f_157493_.close();
    }
 
    public boolean m_157550_(UUID p_157551_) {
-      return this.f_157491_.contains(p_157551_);
+      this.accessLock.readLock().lock();
+      try {
+         return this.f_157491_.contains(p_157551_);
+      }finally {
+         this.accessLock.readLock().unlock();
+      }
    }
 
    public LevelEntityGetter<T> m_157567_() {
@@ -314,11 +_,21 @@
    }
 
    public boolean m_202167_(BlockPos p_202168_) {
-      return this.f_157497_.get(ChunkPos.m_151388_(p_202168_)).m_157691_();
+      this.accessLock.readLock().lock();
+      try {
+         return this.f_157497_.get(ChunkPos.m_151388_(p_202168_)).m_157691_();
+      }finally {
+         this.accessLock.readLock().unlock();
+      }
    }
 
    public boolean m_202165_(ChunkPos p_202166_) {
-      return this.f_157497_.get(p_202166_.m_45588_()).m_157691_();
+      this.accessLock.readLock().lock();
+      try {
+         return this.f_157497_.get(p_202166_.m_45588_()).m_157691_();
+      }finally {
+         this.accessLock.readLock().unlock();
+      }
    }
 
    public boolean m_157507_(long p_157508_) {
@@ -345,16 +_,23 @@
 
    @VisibleForDebug
    public String m_157572_() {
-      return this.f_157491_.size() + "," + this.f_157494_.m_156821_() + "," + this.f_157495_.m_156887_() + "," + this.f_157498_.size() + "," + this.f_157497_.size() + "," + this.f_157500_.size() + "," + this.f_157499_.size();
+      this.accessLock.readLock().lock();
+      try {
+         return this.f_157491_.size() + "," + this.f_157494_.m_156821_() + "," + this.f_157495_.m_156887_() + "," + this.f_157498_.size() + "," + this.f_157497_.size() + "," + this.f_157500_.size() + "," + this.f_157499_.size();
+      }finally {
+         this.accessLock.readLock().unlock();
+      }
    }
 
    class Callback implements EntityInLevelCallback {
       private final T f_157609_;
+      private final Entity realEntity;
       private long f_157610_;
       private EntitySection<T> f_157611_;
 
       Callback(T p_157614_, long p_157615_, EntitySection<T> p_157616_) {
          this.f_157609_ = p_157614_;
+         this.realEntity = p_157614_ instanceof Entity ? (Entity) p_157614_ : null;
          this.f_157610_ = p_157615_;
          this.f_157611_ = p_157616_;
       }
@@ -371,9 +_,11 @@
             PersistentEntitySectionManager.this.m_157509_(this.f_157610_, this.f_157611_);
             EntitySection<T> entitysection = PersistentEntitySectionManager.this.f_157495_.m_156893_(i);
             entitysection.m_188346_(this.f_157609_);
+            long oldSectionKey = f_157610_;
             this.f_157611_ = entitysection;
             this.f_157610_ = i;
             this.m_157620_(visibility, entitysection.m_156848_());
+            if (this.realEntity != null) net.minecraftforge.common.ForgeHooks.onEntityEnterSection(this.realEntity, oldSectionKey, i);
          }
 
       }
